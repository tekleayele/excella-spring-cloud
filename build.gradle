
buildscript {
    ext.setExtProperty = { propertyName, defaultValue ->
        if (!project.hasProperty(propertyName)) {
            ext[propertyName] = defaultValue
        }
    }
    ext {
        setExtProperty("scsStartersVersion","2.0.1.RELEASE")
        setExtProperty("springCloudVersion","Finchley.M8")
        springBootVersion = "2.0.4.RELEASE"
        lombokVersion = '1.18.2'
        springSecurityOAuthVersion = '2.3.3.RELEASE'
        springSecurityJwtVersion = '1.0.9.RELEASE'
        swaggerVersion = '2.9.2'
        h2Version = '1.4.196'
        flywayVersion = '5.1.4'
        postgresqlVersion = '42.2.4'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/plugins-release" }
        maven { url "https://repo.spring.io/libs-release" }
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.20.1")

    }
}
subprojects {
    apply plugin: "java"
    apply plugin: "eclipse"
    apply plugin: "idea"
    apply plugin: "org.springframework.boot"
    apply plugin: "io.spring.dependency-management"
    apply plugin: 'com.palantir.docker'

    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/libs-release" }
        maven { url "https://repo.spring.io/libs-snapshot" }
        maven { url 'https://repo.spring.io/libs-milestone'}

    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            mavenBom "io.pivotal.spring.cloud:spring-cloud-services-dependencies:${scsStartersVersion}"

        }
    }

    dependencies {
        compile("org.springframework.boot:spring-boot-starter-web")
        compile("org.springframework.boot:spring-boot-starter-actuator")
        compile ("org.springframework.boot:spring-boot-starter-security")
        compileOnly("org.projectlombok:lombok:${lombokVersion}")
        compile "io.springfox:springfox-spring-web:${swaggerVersion}"
        compile "io.springfox:springfox-swagger2:${swaggerVersion}"
        compile "io.springfox:springfox-swagger-ui:${swaggerVersion}"
        annotationProcessor("org.projectlombok:lombok:${lombokVersion}")

    }

}


project(":excella-config-server") {
    dependencies {
        compile('org.springframework.cloud:spring-cloud-config-server')
    }
    
    bootJar {
        baseName = 'excella-config-server'
        version =  '0.1.0'
    }
}

project(":excella-service-provider") {
    dependencies {
        compile("io.pivotal.spring.cloud:spring-cloud-services-starter-config-client")
        compile("io.pivotal.spring.cloud:spring-cloud-services-starter-service-registry")
        compile ("org.springframework.boot:spring-boot-starter-data-jpa")
        compile ("org.springframework.security.oauth:spring-security-oauth2:${springSecurityOAuthVersion}")
        compile ("org.springframework.security:spring-security-jwt:${springSecurityJwtVersion}")
        compile("com.h2database:h2:${h2Version}")
        compile ("com.google.code.gson:gson:2.8.2")
        runtime "org.flywaydb:flyway-core:${flywayVersion}"
        runtime "org.postgresql:postgresql:${postgresqlVersion}"

    }
    
    bootJar {
        baseName = 'excella-service-provider'
        version =  '0.1.0'
    }
}

project(":excella-eureka-server") {
    dependencies {
        compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-eureka-server', version: '2.0.1.RELEASE'
        testCompile('org.springframework.boot:spring-boot-starter-test')
    }


    bootJar {
        baseName = 'excella-eureka-server'
        version =  '0.1.0'
    }
}

project(":excella-service-consumer") {
    dependencies {
        compile("io.pivotal.spring.cloud:spring-cloud-services-starter-service-registry")
        compile("io.pivotal.spring.cloud:spring-cloud-services-starter-circuit-breaker")
    }

    bootJar {
        baseName = 'excella-service-consumer'
        version =  '0.1.0'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.10.1'
}

